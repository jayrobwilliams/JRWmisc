% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmcreg.R
\name{mcmcreg}
\alias{mcmcreg}
\title{Regression Tables for MCMC Output}
\usage{
mcmcreg(mod, pars, point.est = "mean", ci = 0.95, hpdi = F,
  brms.re = F, custom.coef.names = NULL, gof = numeric(0),
  custom.gof.names = character(0), format = "latex", file, ...)
}
\arguments{
\item{mod}{a single MCMC model object, or a list of model objects of the same class.}

\item{pars}{a scalar or vector of the parameters you wish to include in the table.
\code{stanfit} objects can use either the individual parameter names, or the
names of the indexed parameter to retrieve the entire parameter e.g.
\code{pars = 'beta'} will return \code{beta[1]}, \code{beta[2]}, and \code{beta[3]} for a Stan
model with a three element beta parameter. Parameter arguments for all
other model object types must contain the entire set of parameters you
wish to include in the table e.g. \code{pars = c('beta[1]', 'beta[2]', 'beta[3]')}.
This is necessary when combining JAGS models with different parameters because
\code{coda} does not support parameter family extraction like Stan. When combining
models with different parameters in one table, this argument also accepts a
list the length of the number of models.}

\item{point.est}{a character indicating whether to use the mean or median for
point estimates in the table.}

\item{ci}{a scalar indicating the confidence level of the uncertainty intervals.}

\item{hpdi}{a logical indicating whether to use highest posterior density intervals
or equal tailed credible intervals to capture uncertainty.}

\item{brms.re}{a logical indicating whether to include random effect estimates
from \code{brms} models.}

\item{custom.coef.names}{an optional vector or list of vectors containing parameter
names for each model. If there are multiple models, the list must have the same
number of elements as there are models, and the vector of names in each list
element must match the number of parameters. If not supplied, the function
will use the parameter names in the model object(s). Note that this replaces
the standard \code{custom.coef.names} argument in \code{texreg} because there is no
\code{extract} method for MCMC model objects, and many MCMC model objects do not
have unique parameter names.}

\item{gof}{a named list of goodness of fit statistics, or a list of such lists.}

\item{custom.gof.names}{an optional vector or list of vectors containing
goodness of fit statistic names for each model. If there are multiple models,
the list must have the same number of elements as there are models,
and the vector of names in each list element must match the number of goodness
of fit statistics.}

\item{format}{a character indicating \code{latex} or \code{html} output.}

\item{file}{optional file name to write table to file instead of printing to
console.}

\item{...}{optional arguments to \code{texreg}.}
}
\value{
A formatted regression table in LaTeX or HTML format.
}
\description{
Regression tables for MCMC model output using \code{texreg}.
}
\details{
If using \code{custom.coef.map} with more than one model, you should rename
the parameters in the model objects to ensure that different parameters with the
same subscript are not conflated by \code{texreg} e.g. \code{beta[1]} could represent age
in one model and income in another, and \code{texreg} would combine the two if you
do not rename \code{beta[1]} to more informative names in the model objects.

If \code{mod} is a \code{brmsfit} object or list of \code{brmsfit} objects, note that the
default \code{brms} names for coefficients are \code{b_Intercept} and \code{b}, so both of
these should be included in \code{par} if you wish to include the intercept in the
table. \code{mcmcreg()} will automatically look for random effects parameters which
\code{brms} labels with a leading \code{r_}. If you wish to include additional parameters
from more complex \code{brms} models, you can identify them by inspecting
\code{brmsfit$fit@model_pars}.
}
\examples{
# simple linear model
fit1 <- brm(mpg ~ cyl + disp + hp, data = mtcars,
            family = gaussian())
mcmcreg(fit1, pars = c('b_Intercept', 'b'),
custom.coef.map = list('b_cyl' = 'Cylinders',
                       'b_disp' = 'Displacement',
                       'b_hp' = 'Horsepower',
                       'b_Intercept' = '(Constant)'))

# random effects linear model
fit2 <- brm(mpg ~ cyl + disp + hp + (1 | gear),
            data = mtcars, family = gaussian())
mcmcreg(fit2, pars = c('b_Intercept', 'b'))
}
\author{
Rob Williams, \email{jayrobwilliams@gmail.com}
}
